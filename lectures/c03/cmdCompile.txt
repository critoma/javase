
Linux UBUNTU:
export JAVA_HOME=/opt/software/java/jdks/jdk1.8.0_161
export PATH=$JAVA_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
export CLASSPATH=.:$JAVA_HOME/jre/lib
export JSE=/home/stud/javase/lectures


cd $JSE/c03/src

1. C/C++ reminder sample about Inheritance, Polymorphism and ClassCast Exception

2. Inheritance/Polymorphism/Interface as Type/Arrays of Objects + ask ChatGPT AI to generate code for an example of Java polymorphism with 3 classes and 1 interface:
javac eu/deic/polymorphism/ProgMainPoly.java
java ProgMainPoly

javac eu/ase/polimorfism/IMiscare.java
javac eu/ase/polimorfism/Vehicul.java
javac eu/ase/polimorfism/IAuto.java
javac eu/ase/polimorfism/Auto.java
javac eu/ase/polimorfism/Avion.java
javac eu/ase/polimorfism/ProgMain.java

java eu/ase/polimorfism/ProgMain

*** Robocode:
New:
https://github.com/robo-code/robocode/releases

Old:
http://sourceforge.net/projects/robocode/files/latest/download?source=files

# cd /home/stud/javase/lectures/robocode-1.9.0.0/
# ./robocode.sh

# cd /home/stud/javase/lectures/robocode-1.9.0.0/robots/euase/jrobots

# cd /home/stud/javase/lectures/robocode-1.9.0.0/robots
# javac -cp .:../libs/robocode.jar euase/jrobots/*.java
->Battle->New (move at least two robots from left to right in GUI)

###############################################
//Exercises 1.1:

package euase.jrobots;


import robocode.*;



// API help : http://robocode.sourceforge.net/docs/robocode/robocode/Robot.html



/**

 * Using just the ahead and turnRight/turnLeft methods create a robot that travels in a 

 * complete square once, beginning from its starting position. Make the robot travel 150 units for 

 * each side of the square.

 */



/**

 * MyClass - a class by (your name here)

 */

public class MyExercices_1_1 extends Robot 

{

public void run() {

			//first side

			ahead(150);

			turnRight(90);

			//second side

			ahead(150);

			turnRight(90);

			//third side

			ahead(150);

			turnRight(90);

			//fourth side

			ahead(150);

			turnRight(90);						

	}



}
###############################################
// MyFirstRobot2:

package euase.jrobots;

import robocode.*;

//import java.awt.Color;



// API help : http://robocode.sourceforge.net/docs/robocode/robocode/Robot.html



/**

 * MyFirstRobot2 - a robot by (your name here)

 */

public class MyFirstRobot2 extends Robot

{

	/**

	 * run: MyFirstRobot2's default behavior

	 */

	public void run() {

		// Initialization of the robot should be put here



		// After trying out your robot, try uncommenting the import at the top,

		// and the next line:



		// setColors(Color.red,Color.blue,Color.green); // body,gun,radar



		// Robot main loop

		while(true) {

			// Replace the next 4 lines with any behavior you would like

			ahead(100);

			turnGunRight(360);

			back(100);

			turnGunRight(360);

		}

	}



	/**

	 * onScannedRobot: What to do when you see another robot

	 */

	public void onScannedRobot(ScannedRobotEvent e) {

		// Replace the next line with any behavior you would like

		//fire(1);

		fire(2);

	}



	/**

	 * onHitByBullet: What to do when you're hit by a bullet

	 */

	public void onHitByBullet(HitByBulletEvent e) {

		// Replace the next line with any behavior you would like

		back(10);

		//scan();

	}

	

	/**

	 * onHitWall: What to do when you hit a wall

	 */

	public void onHitWall(HitWallEvent e) {

		// Replace the next line with any behavior you would like

		back(20);

		//scan();

	}	

}

-----------------------------------------------------------------------------------

